import ballerina/time;

// TODO: Remove "public" from the generated types
// I've added the "public" qualifier to get-rid of the several warnings in the client class
public enum Gender {
    M,
    F
}

// Generated model types
// TODO: Make all these model types readonly
//  I didn't make them readonly because of the following issue TODO: Add issue link
public type Building readonly & record {|
    readonly string buildingCode;
    string city;
    string state;
    string country;
    string postalCode;
|};

public type Workspace record {|
    readonly string workspaceId;
    string workspaceType;

    string buildingCode;
|};

public type Department record {|
    readonly string deptNo;
    string deptName;

|};

public type Employee record {|
    readonly string empNo;
    string firstName;
    string lastName;
    time:Date birthDate;
    Gender gender;
    time:Date hireDate;

    string deptNo;
    string workspaceId;
|};

// Insert-related generated types
// In some cases, *Insert types are the same as the model types
// In other cases, *Insert types are different from the model types
//  e.g., when the model type has a required field that is not required in the insert operation
//  - Case 1: the model type has a auto-increment primary key field
//  - Case 2: The primary key values are generated by the bal persist client
// Therefore we need to have separate types for insert operations for consistency

type BuildingInsert Building;

type DepartmentInsert Department;

type WorkspaceInsert Workspace;

type EmployeeInsert Employee;

// Update-related generated types

public type BuildingUpdate record {|
    string city?;
    string state?;
    string country?;
    string postalCode?;
|};

public type WorkspaceUpdate record {|
    string workspaceType?;
    string buildingCode?;
|};

public type DepartmentUpdate record {|
    string deptName?;
|};

public type EmployeeUpdate record {|
    string firstName?;
    string lastName?;
    time:Date birthDate?;
    Gender gender?;
    time:Date hireDate?;

    string deptNo?; 
    string workspaceId?;
|};

public type BuildingTargetType typedesc<BuildingWithRelations>;

public type BuildingWithRelations record {|
    readonly string buildingCode?;
    string city?;
    string state?;
    string country?;
    string postalCode?;

    WorkspaceOptionalized[] workspaces?;
|};

public type WorkspaceTargetType typedesc<WorkspaceWithRelations>;

public type WorkspaceWithRelations record {|
    readonly string workspaceId?;
    string workspaceType?;

    BuildingOptionalized building?;
    EmployeeOptionalized? employee?;
|};

public type DepartmentTargetType typedesc<DepartmentWithRelations>;

public type DepartmentWithRelations record {|
    readonly string deptNo?;
    string deptName?;

    string buildingCode?;

    EmployeeOptionalized[] employees?;
|};

public type EmployeeTargetType typedesc<EmployeeWithRelations>;

public type EmployeeWithRelations record {|
    readonly string empNo?;
    string firstName?;
    string lastName?;
    time:Date birthDate?;
    Gender gender?;
    time:Date hireDate?;

    string deptNo?;
    string workspaceId?;

    DepartmentOptionalized department?;
    WorkspaceOptionalized workspace?;
|};


public type BuildingOptionalized record {|
    // *Building?
    readonly string buildingCode?;
    string city?;
    string state?;
    string country?;
    string postalCode?;
|};

public type WorkspaceOptionalized record {|
    readonly string workspaceId?;
    string workspaceType?;

    string buildingCode?;
|};

public type EmployeeOptionalized record {|
    readonly string empNo?;
    string firstName?;
    string lastName?;
    time:Date birthDate?;
    Gender gender?;
    time:Date hireDate?;

    string deptNo?;
    string workspaceId?;
|};

public type DepartmentOptionalized record {|
    readonly string deptNo?;
    string deptName?;

    string buildingCode?;
|};